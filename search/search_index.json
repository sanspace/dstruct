{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to DStruct","text":"<p>This is an attempt to curate the Data Structures and Algorithms learning material in one place.</p>"},{"location":"#programming-review","title":"Programming Review","text":"<ul> <li>Functions</li> <li>Recursion</li> <li>Class</li> <li>Memoization (for DP)</li> </ul>"},{"location":"#data-structures","title":"Data Structures","text":"<ul> <li>Array (List)</li> <li>Set</li> <li>Hash Table (Dict)</li> <li>Stack</li> <li>Queue</li> <li>Linked List</li> <li>Tree</li> <li>Binary Tree</li> <li>Graph</li> </ul>"},{"location":"#algorithms","title":"Algorithms","text":"<ul> <li>Two Pointer</li> <li>Sliding Window Technique</li> <li>Tortoise and Hare</li> <li>Binary Search</li> <li>Depth First Search (DFS)</li> <li>Breadth First Search (BFS)</li> <li>Dijkstra's</li> </ul>"},{"location":"#concepts","title":"Concepts","text":"<ul> <li>Combinatorics<ul> <li>Combinations</li> <li>Permutations</li> </ul> </li> <li>Dynamic Programming aka DP<ul> <li>Memoization</li> <li>Tabulation</li> </ul> </li> </ul>"},{"location":"about/","title":"About","text":"<p>Curated by San</p>"},{"location":"algorithms/intro/","title":"Algorithms","text":""},{"location":"complexity/bigo/","title":"Big O","text":""},{"location":"data-structures/","title":"Data Structures","text":""},{"location":"data-structures/array/","title":"Array","text":"<p>An array is a list of items of same type stored in a contiguous memory space. This makes it efficient to retrieve an item from an array if you know the position of it. However, when you do not know the item position (index), the search for it is slow.</p>"},{"location":"data-structures/binarytree/","title":"Binary Tree","text":""},{"location":"data-structures/graph/","title":"Graph","text":""},{"location":"data-structures/linkedlist/","title":"Linked List","text":""},{"location":"data-structures/queue/","title":"Queue","text":""},{"location":"data-structures/stack/","title":"Stack","text":""},{"location":"programming/recursion/","title":"Recursion","text":""}]}